name: Release

on:
  workflow_dispatch:    
    inputs:
      release_type:
        description: 'Please choose a release type. It will automatically bump the latest semantic release version accordingly. Selected default id "automatic" and will figure out next release version automatically based on conventional commit messages.'
        type: choice
        required: true
        default: 'conventional commit'
        options:
          - 'conventional commit'
          - major
          - feature
          - minor
          - bug
          - patch
          - hotfix
          - alpha
          - beta
          - pre
          - rc

jobs:
  determine_release_version:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
        
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.0

      - name: Create and push fallback tag if no tag found
        if: ${{ steps.previoustag.outputs.tag == '0.0.0' }}
        run: |
          git tag 0.0.0
          git push origin 0.0.0

### conventional commit
      - name: Get Next Version based on conventional commit messages
        if: ${{ inputs.release_type == 'conventional commit' }}
        id: version_by_conventional_commit
        uses: ietf-tools/semver-action@v1
        with:
          token: ${{ github.token }}
          branch: main
          skipInvalidTags: true
          fromTag: ${{ steps.previoustag.outputs.tag }}

### none conventional commit
      - name: Get Next Version based on given version fragment input
        if: ${{ inputs.release_type != 'conventional commit' }}
        id: version_by_fragment
        uses: christian-draeger/increment-semantic-version@1.2.1
        with:
          current-version: ${{ steps.previoustag.outputs.tag }}
          version-fragment: ${{ inputs.release_type }}
          
### set version
      - name: Hold new version
        id: set_version
        run: |
          if [ "${{ inputs.release_type }}" = "conventional commit" ]; then
            echo "::set-output name=new_version::${{ steps.version_by_conventional_commit.outputs.nextStrict }}"
          else
            echo "::set-output name=new_version::${{ steps.version_by_fragment.outputs.next-version }}"
          fi

      - name: Print the input tag to STDOUT
        run: echo "${{ steps.previoustag.outputs.tag }} --> ${{ steps.set_version.outputs.new_version }}"

      - name: Create dummy commit and tag new version
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git commit --allow-empty -m "bump version: ${{ steps.previoustag.outputs.tag }} --> ${{ steps.set_version.outputs.new_version }}"
          git tag ${{ steps.set_version.outputs.new_version }}
          git push origin main --tags
